{"version":3,"sources":["stores/index.ts","components/CalculationField.tsx","components/ResultField.tsx","components/Keyboard.tsx","components/App.tsx","reportWebVitals.ts","index.tsx","stores/CalculatorStore.ts"],"names":["store","calculatorStore","CalculatorStore","StoreContext","createContext","useStore","useContext","CalculationField","observer","className","calculations","ResultField","result","Keyboard","map","item","onClick","addValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Provider","value","document","getElementById","calculate","eval","error","reset","delSymbol","slice","makeObservable","this","observable","action","length","setTimeout"],"mappings":"uNAQaA,EAAgB,CAC3BC,gBAAiB,I,KAAIC,IAGVC,EAAeC,wBAAcJ,GAE7BK,EAAW,WACtB,OAAOC,qBAAWH,I,OCDLI,EAVUC,aAAS,WAChC,IAAQP,EAAoBI,IAApBJ,gBAER,OACE,qBAAKQ,UAAU,eAAf,SACGR,EAAgBS,kBCORC,EAVKH,aAAS,WAC3B,IAAQP,EAAoBI,IAApBJ,gBAER,OACE,qBAAKQ,UAAU,SAAf,SACGR,EAAgBW,YCqBRC,EA1BML,aAAS,WAE5B,IAIQP,EAAoBI,IAApBJ,gBAER,OACE,qBAAKQ,UAAU,WAAf,SAPoB,CACpB,KAAM,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAQtEK,KAAI,SAACC,GAAD,OAChB,wBACEN,UAAU,mBAEVO,QAAS,kBAAMf,EAAgBgB,SAASF,IAH1C,SAKGA,GAHIA,WCFFG,MAVf,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3B,EAAa4B,SAAd,CAAuBC,MAAOhC,EAA9B,SACE,cAAC,EAAD,QAGJiC,SAASC,eAAe,SAM1Bf,K,8fCnBMjB,gB,WAIJ,2BAAe,IAAD,uNAHdU,OAAiB,GAGH,KAFdF,aAAuB,GAET,KA+BdyB,UAAY,WACV,IACE,MAAKvB,QAAUwB,KAAK,MAAK1B,eAAiB,KAAO,GACjD,MAAO2B,OACP,MAAKzB,OAAS,UAnCJ,KAuCd0B,MAAQ,WACN,MAAK1B,OAAS,GACd,MAAKF,aAAe,IAzCR,KA4Cd6B,UAAY,WACV,MAAK7B,aAAe,MAAKA,aAAa8B,MAAM,GAAI,IA5ChDC,4CAAeC,KAAM,CACnB9B,OAAQ+B,oCACRjC,aAAciC,oCACd1B,SAAU2B,sC,4NAId,SAASZ,GAAgB,IAAD,OACR,MAAVA,EACFU,KAAKP,YAEY,OAAVH,EACPU,KAAKJ,QAEY,QAAVN,EACPU,KAAKH,aAGLG,KAAKhC,aAAegC,KAAKhC,aAAesB,EAEpCU,KAAKhC,aAAamC,OAAS,KAC7BH,KAAKhC,aAAe,eACpBoC,YAAW,WACT,EAAKpC,aAAe,KACnB,OAEDgC,KAAK9B,SAAQ8B,KAAK9B,OAAS,S,mBAsBtBV,wC","file":"static/js/main.29ad6c77.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nimport CalculatorStore from './CalculatorStore';\r\n\r\nexport interface TStore {\r\n  calculatorStore: CalculatorStore;\r\n};\r\n\r\nexport const store: TStore = {\r\n  calculatorStore: new CalculatorStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport const useStore = () => {\r\n  return useContext(StoreContext);\r\n};\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useStore } from '../stores';\r\n\r\nconst CalculationField = observer(() => {\r\n  const { calculatorStore } = useStore();\r\n\r\n  return (\r\n    <div className=\"calculations\">\r\n      {calculatorStore.calculations}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default CalculationField;","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport { useStore } from '../stores';\r\n\r\n\r\nconst ResultField = observer(() => {\r\n  const { calculatorStore } = useStore();\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      {calculatorStore.result}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default ResultField;","import React, { FC } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport { useStore } from '../stores';\r\n\r\n\r\nconst Keyboard: FC = observer(() => {\r\n\r\n  const keyboardItems = [\r\n    'AC', 'DEL', '/', '7', '8', '9', '*', '4', '5', '6', '+', '1', '2', '3', '-', '.', '0', '='\r\n  ];\r\n\r\n  const { calculatorStore } = useStore();\r\n\r\n  return (\r\n    <div className=\"keyboard\">\r\n      {\r\n        keyboardItems.map((item: any) => (\r\n          <button\r\n            className=\"keyboard-buttons\"\r\n            key={item}\r\n            onClick={() => calculatorStore.addValue(item)}\r\n          >\r\n            {item}\r\n          </button>\r\n        ))\r\n      }\r\n    </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Keyboard;\r\n","import React from 'react';\n\nimport '../styles/App.css';\n\nimport CalculationField from './CalculationField';\nimport ResultField from './ResultField';\nimport Keyboard from './Keyboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CalculationField />\n      <ResultField />\n      <Keyboard />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\n\nimport App from './components/App';\nimport { store, StoreContext } from './stores';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { observable, action, makeObservable } from 'mobx';\r\n\r\n\r\nclass CalculatorStore {\r\n  result: string = \"\"\r\n  calculations: string = \"\"\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      result: observable,\r\n      calculations: observable,\r\n      addValue: action,\r\n    })\r\n  }\r\n\r\n  addValue(value: string) {\r\n    if (value === \"=\") {\r\n      this.calculate();\r\n    }\r\n    else if (value === \"AC\") {\r\n      this.reset();\r\n    }\r\n    else if (value === \"DEL\") {\r\n      this.delSymbol();\r\n    }\r\n    else {\r\n      this.calculations = this.calculations + value;\r\n\r\n      if (this.calculations.length > 20) {\r\n        this.calculations = \"out of limit\";\r\n        setTimeout(() => {\r\n          this.calculations = \"\";\r\n        }, 1500);\r\n      }\r\n      if (this.result) this.result = \"\";\r\n    }\r\n  }\r\n\r\n  calculate = () => {\r\n    try {\r\n      this.result = (eval(this.calculations) || \"0\") + \"\";\r\n    } catch (error) {\r\n      this.result = \"error\";\r\n    }\r\n  }\r\n\r\n  reset = () => {\r\n    this.result = \"\";\r\n    this.calculations = \"\";\r\n  }\r\n\r\n  delSymbol = () => {\r\n    this.calculations = this.calculations.slice(0, -1);\r\n  }\r\n};\r\n\r\nexport default CalculatorStore;\r\n"],"sourceRoot":""}